openapi: 3.0.3
info:
  title: Swagger my Tweeter - OpenAPI 3.0
  version: 1.0.11
servers:
  - url: http://localhost/

paths:
  /api/tweets:
    get:
      tags:
        - Tweets
      summary: Get all tweets
      responses:
        '200':
          description: List of tweets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweets_get'
    post:
      tags:
        - Tweets
      summary: Create a tweet
      parameters:
        - name: Api-Key
          in: header
          description: Write api_key to loin
          required: true
          schema:
            type: string
      security:
        - ApiKeyAuth: []

      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweets_post_request'
      responses:
        '201':
          description: Tweet created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweets'


  /api/tweets/{id}:
    delete:
      tags:
        - Tweets
      summary: Delete the specified tweet
      parameters:
        - name: Api-Key
          in: header
          description: Write api_key to loin
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of the tweet to delete
          required: true
          schema:
            type: integer
      security:
        - ApiKeyAuth: []
      responses:
        '202':
          description: Tweet deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
        '400':
          description: Invalid request or tweet not found


  /api/tweets/{id}/likes:
    post:
      tags:
        - Tweets
      summary: Like a tweet
      parameters:
        - name: id
          in: path
          description: ID of the tweet to like
          required: true
          schema:
            type: integer
        - name: Api-Key
          in: header
          description: Write api_key to loin
          required: true
          schema:
            type: string
      security:
        - ApiKeyAuth: [ ]
      responses:
        '202':
          description: Like added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
    delete:
      tags:
        -   Tweets
      summary: Unlike a tweet
      parameters:
        - name: id
          in: path
          description: ID of the tweet to unlike
          required: true
          schema:
            type: integer
        - name: Api-Key
          in: header
          description: Write api_key to loin
          required: true
          schema:
            type: string
      security:
        - ApiKeyAuth: [ ]
      responses:
        '202':
          description: Like removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean


  /api/users/me:
    get:
      tags:
        - Users
      summary: Get my profile
      description: Get my profile
      operationId: get_my_user
      parameters:
        - name: Api-Key
          in: header
          description: Write api_key to login
          required: true
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '404':
          description: You API_KEY is not valid!

  /api/users/{id}:
    get:
      tags:
        - Users
      summary: Get someone else's profile
      description: Get profile by user id
      operationId: get_profile
      parameters:
        - name: id
          in: path
          description: ID of profile
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '404':
          description: This user is not found!

  /api/medias:
    post:
      tags:
        - Files
      summary: Upload media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Files'

      responses:
        '200':
          description: Media uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                  media_id:
                    type: integer
        '400':
          description: Invalid file

components:
  schemas:
    Users:
      type: object
      properties:
        result:
          type: boolean
        user:
          properties:
            id:
              type: integer
              format: int64
              example: 10
            name:
              type: string
              example: Sasha
            another_info:
              type: string
              example: Like music
            follower:
              type: array
              example: {'id': 1, 'name': sasha}
            following:
              type: array
              example: {'id': 2, 'name': nikita}
          xml:
            name: users


    Tweets:
      type: object
      properties:
        result:
          type: boolean
          example: True
        tweet:
          properties:
            id:
              type: integer
              format: int64
              example: 10
            tweet_data:
              type: string
              example: Hello world!
            tweet_media_ids:
              type: string
              format: list
              example: [1, 2]
          xml:
            name: tweets

    Tweets_get:
      type: object
      properties:
        result:
          type: boolean
          example: True
        tweets:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              content:
                type: string
                example: Hello world
              attachments:
                type: array
                items:
                  type: string
                  example: /usr/photo/hello.jpg
              author:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                    example: sasha
              likes:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    name:
                      type: string
                      example: nikita
            xml:
              name: tweets_get

    Tweets_post_request:
      type: object
      properties:
        tweet_data:
          type: string
        tweet_media_ids:
          type: array
          items:
            type: integer

    Files:
      type: object
      properties:
        file:
          type: string
          format: binary
      xml:
        name: files


  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Api-Key

security:
  - ApiKeyAuth: []